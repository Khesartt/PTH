// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTH.infraestructure.EF.Context;

namespace PTH.infraestructure.EF.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230326204829_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PTH.domain.models.Gender", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idGender");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("PTH.domain.models.Hotel", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("varchar(100)");

                    b.Property<TimeSpan>("checkIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("checkOut")
                        .HasColumnType("time");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("description")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("idCity")
                        .HasColumnType("bigint");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("services")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idHotel");

                    b.HasIndex("idCity");

                    b.HasIndex("idUser");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("PTH.domain.models.Parametric", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("key")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("value")
                        .HasColumnType("varchar(200)");

                    b.HasKey("id")
                        .HasName("PK_idParametric");

                    b.ToTable("Parametric");
                });

            modelBuilder.Entity("PTH.domain.models.Reservation", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime");

                    b.Property<long>("idRoom")
                        .HasColumnType("bigint");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("inDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("outDate")
                        .HasColumnType("datetime");

                    b.HasKey("id")
                        .HasName("PK_idReservation");

                    b.HasIndex("idRoom");

                    b.HasIndex("idUser");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("PTH.domain.models.Role", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("PTH.domain.models.Room", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<decimal>("baseCost")
                        .HasColumnType("decimal(20,2)");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("description")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("idHotel")
                        .HasColumnType("bigint");

                    b.Property<long>("idRoomType")
                        .HasColumnType("bigint");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("occupied")
                        .HasColumnType("bit");

                    b.Property<int>("quota")
                        .HasColumnType("int");

                    b.Property<decimal>("taxes")
                        .HasColumnType("decimal(20,2)");

                    b.HasKey("id")
                        .HasName("PK_idRoom");

                    b.HasIndex("idHotel");

                    b.HasIndex("idRoomType");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("PTH.domain.models.RoomType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idRoomType");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("PTH.domain.models.Service", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("icon")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idService");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("PTH.domain.models.TypeDocument", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idTypeDocument");

                    b.ToTable("TypeDocument");
                });

            modelBuilder.Entity("PTH.domain.models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("idRole")
                        .HasColumnType("bigint");

                    b.Property<string>("password")
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("tokenDate")
                        .HasColumnType("datetime");

                    b.Property<string>("userLogin")
                        .HasColumnType("varchar(20)");

                    b.HasKey("id")
                        .HasName("PK_idUser");

                    b.HasIndex("idRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PTH.domain.modelsDomain.City", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PK_idCity");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PTH.domain.modelsDomain.ReservationInfo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("idGender")
                        .HasColumnType("bigint");

                    b.Property<long>("idReservation")
                        .HasColumnType("bigint");

                    b.Property<long>("idTypeDocument")
                        .HasColumnType("bigint");

                    b.Property<string>("identification")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("lastNames")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("lastNamesEContact")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("names")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("namesEContact")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("phone")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("phoneEContact")
                        .HasColumnType("varchar(20)");

                    b.HasKey("id")
                        .HasName("PK_idReservationInfo");

                    b.HasIndex("idGender");

                    b.HasIndex("idReservation");

                    b.HasIndex("idTypeDocument");

                    b.ToTable("ReservationInfo");
                });

            modelBuilder.Entity("PTH.domain.models.Hotel", b =>
                {
                    b.HasOne("PTH.domain.modelsDomain.City", null)
                        .WithMany()
                        .HasForeignKey("idCity")
                        .HasConstraintName("FK_idHotelCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTH.domain.models.User", null)
                        .WithMany()
                        .HasForeignKey("idUser")
                        .HasConstraintName("FK_idHotelUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTH.domain.models.Reservation", b =>
                {
                    b.HasOne("PTH.domain.models.Room", null)
                        .WithMany()
                        .HasForeignKey("idRoom")
                        .HasConstraintName("FK_idReservationRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTH.domain.models.User", null)
                        .WithMany()
                        .HasForeignKey("idUser")
                        .HasConstraintName("FK_idReservationUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTH.domain.models.Room", b =>
                {
                    b.HasOne("PTH.domain.models.Hotel", null)
                        .WithMany()
                        .HasForeignKey("idHotel")
                        .HasConstraintName("FK_idRoomHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTH.domain.models.RoomType", null)
                        .WithMany()
                        .HasForeignKey("idRoomType")
                        .HasConstraintName("FK_idRoomByRoomType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTH.domain.models.User", b =>
                {
                    b.HasOne("PTH.domain.models.Role", null)
                        .WithMany()
                        .HasForeignKey("idRole")
                        .HasConstraintName("FK_idUserRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTH.domain.modelsDomain.ReservationInfo", b =>
                {
                    b.HasOne("PTH.domain.models.Gender", null)
                        .WithMany()
                        .HasForeignKey("idGender")
                        .HasConstraintName("FK_idReservationInfoGender")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTH.domain.models.Reservation", null)
                        .WithMany()
                        .HasForeignKey("idReservation")
                        .HasConstraintName("FK_idReservationInfoByReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTH.domain.models.TypeDocument", null)
                        .WithMany()
                        .HasForeignKey("idTypeDocument")
                        .HasConstraintName("FK_idReservationInfoTypeDocument")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
